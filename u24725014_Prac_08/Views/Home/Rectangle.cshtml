@model u24725014_Prac_08.Models.Rectangle

@{
    ViewBag.Title = "View";
}

<h2>Add a Rectangle</h2>
@using (Html.BeginForm("AddRectangle", "home", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h2>Rectangle</h2>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })


        <div class="form-group row my-2">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row my-2">
            @Html.LabelFor(model => model.FillColour, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.FillColour, new { @type = "color", @class = "form-control form-control-color" })

                @Html.ValidationMessageFor(model => model.FillColour, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group row my-2">
            @Html.LabelFor(model => model.StrokeColour, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.StrokeColour, new { @type = "color", @class = "form-control form-control-color" })

                @Html.ValidationMessageFor(model => model.StrokeColour, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row my-2">
            @Html.LabelFor(model => model.StrokeWidth, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StrokeWidth, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StrokeWidth, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group row my-2">
            @Html.LabelFor(model => model.XCoordinate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.XCoordinate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.XCoordinate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row my-2">
            @Html.LabelFor(model => model.YCoordinate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.YCoordinate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.YCoordinate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row my-2">
            <label class="control-label col-md-2">Height of Rectangle</label>

            <div class="col-md-10">
                @Html.EditorFor(model => model.Length, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Length, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row my-2">
            <label class="control-label col-md-2">Length of Rectangle</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Breadth, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Breadth, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row ">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
